The ``7-base_geometry`` module
======================

Using ``BaseGeometry``
-------------------

First import:
``BaseGeometry`` from the ``7-base_geometry`` module:

    >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

Now test it:
    >>> bg = BaseGeometry()
    >>> print(bg) # doctest: +ELLIPSIS
    <7-base_geometry.BaseGeometry object at 0x...>

    >>> bg.integer_validator("my_int", 12)

    >>> bg.integer_validator("width", 89)

    >>> print(bg.__doc__)
    A class: BaseGeometry
    <BLANKLINE>
        Attributes:
            none
        Methods:
            area
            integer_validator
    <BLANKLINE>

    >>> print(bg.__dict__)
    {}

    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

    >>> bg.skrr()
    Traceback (most recent call last):
    AttributeError: 'BaseGeometry' object has no attribute 'skrr'

    >>> bg.integer_validator("my_int", 'ty')
    Traceback (most recent call last):
    TypeError: my_int must be an integer

    >>> bg.integer_validator("lisi", 7.89)
    Traceback (most recent call last):
    TypeError: lisi must be an integer

    >>> bg.integer_validator("width", 0)
    Traceback (most recent call last):
    ValueError: width must be greater than 0

    >>> bg.integer_validator("age", -622)
    Traceback (most recent call last):
    ValueError: age must be greater than 0
